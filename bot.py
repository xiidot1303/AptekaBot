from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, ConversationHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, ChatAction

import os
from conversationList import GLOBAL_NAME, SELECT_DRUGS, SUPERADMIN, UPDATE_EXCEL, START, EDIT_ABOUT_US, UPDATE_ABOUT_US, WRITE_NAME, SEND_PHONE
import sqlite3
from functions import sort_percent_grow, sort_price_grow, sort_price_wane, sort_percent_wane
import pandas as pd
def forward(update, context):
    print(update.message.forward_from)


def issuperadmin(id):
    if id == superadmin:
        return True
    else:
        return False
superadmin = os.getenv("SUPERADMIN")
def start(update, context):
    
    admins = []
    conn = sqlite3.connect('data.db')
    c = conn.cursor()
    c.execute("SELECT * FROM admins ")
    for i in c.fetchall():

        admins.append(i[0]) 
    
    conn.commit()
    conn.close()   
    if update.message.chat.id == superadmin:
        update.message.reply_text("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞", reply_markup=ReplyKeyboardMarkup(keyboard=[['–û–±–Ω–æ–≤–∏—Ç—å Excel'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ê–¥–º–∏–Ω—ã']], resize_keyboard=True))
        
        return SUPERADMIN
    elif update.message.chat.id in admins:
        update.message.reply_text("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞", reply_markup=ReplyKeyboardMarkup(keyboard=[['–û–±–Ω–æ–≤–∏—Ç—å Excel'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç']], resize_keyboard=True))
        return SUPERADMIN
    else:
        conn = sqlite3.connect('data.db')
        c = conn.cursor()
        c.execute("SELECT * FROM sort WHERE id = {} ".format(update.message.chat.id))
        obj = c.fetchall()
        if not obj:
            c.execute("INSERT INTO sort VALUES ({}, '—Ü–µ–Ω–µ', '–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ', '–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ')".format(update.message.chat.id))
            conn.commit()



        c.execute("SELECT * FROM users WHERE id={}".format(update.message.chat.id))
        user = c.fetchone()
        if user:
            update.message.reply_text("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –ø–æ –ø–æ–∏—Å–∫—É –ª–µ–∫–∞—Ä—Å—Ç–≤ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏", reply_markup=ReplyKeyboardMarkup(keyboard=[['–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤üîé'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è']], resize_keyboard=True))
            conn.commit()
            conn.close()
        else:
            c.execute("INSERT INTO users VALUES ({}, 'x', 'x')".format(update.message.chat.id))
            conn.commit()
            conn.close()
            update.message.reply_text('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è')
            return WRITE_NAME


#registr
def write_name(update, context):
    conn = sqlite3.connect('data.db')
    c = conn.cursor()
    c.execute("""UPDATE users SET name = '{}' WHERE id={} """.format(update.message.text, update.message.chat.id))

    conn.commit()
    conn.close()
    i_contact = KeyboardButton(text='–æ—Ç–ø—Ä–∞–≤–∏—Ç—å ', request_contact=True)
    update.message.reply_text('–•–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=ReplyKeyboardMarkup([[i_contact]], resize_keyboard=True))
    return SEND_PHONE

def send_phone(update, context):
    conn = sqlite3.connect('data.db')
    c = conn.cursor()
    if update.message.contact == None or not update.message.contact:
        c.execute("""UPDATE users SET phone_number = '{}' WHERE id={} """.format(str(update.message.text), update.message.chat.id))
    else:
        c.execute("""UPDATE users SET phone_number = '{}' WHERE id={} """.format(str(update.message.contact.phone_number), update.message.chat.id))

    conn.commit()
    conn.close()
    update.message.reply_text("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –ø–æ –ø–æ–∏—Å–∫—É –ª–µ–∫–∞—Ä—Å—Ç–≤ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏", reply_markup=ReplyKeyboardMarkup(keyboard=[['–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤üîé'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è']], resize_keyboard=True))
    return ConversationHandler.END


def global_name(update, context):
    bot = context.bot
    text = update.message.text 
    if text == '–ù–∞–∑–∞–¥':
        update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=ReplyKeyboardMarkup(keyboard=[['–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤üîé'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è']], resize_keyboard=True))
        return ConversationHandler.END
    else:
        bot.send_chat_action(chat_id=update.message.chat.id, action=ChatAction.TYPING)
        p = os.listdir()
        for i in p:
            if i[-3::] == 'xls' or i[-4::] == 'xlsx':
                path = i
                break
        
        name = update.message.text.lower()
        df = pd.read_excel('{}'.format(path), sheet_name=0)
        
        if '–µ' in name:
            name = name.replace('–µ', '(–µ|—ë)')
        if '—ã' in name:
            name = name.replace('—ã', '(—ã|–∏)')
        if '–∞' in name:
            name = name.replace('–∞', '(–∞|–æ)')
        if '–æ' in name:
            name = name.replace('–æ', '(–∞|–æ)')
            if '–∞|(–∞|–æ)' in name:
                name = name.replace('–∞|(–∞|–æ)', '–∞|–æ')
        if '–∏' in name:
            name = name.replace('–∏', '(–∏|—ã)')
            if '—ã|(–∏|—ã)' in name:
                name = name.replace('—ã|(–∏|—ã)', '—ã|–∏')
        if '—É' in name:
            name = name.replace('—É', '(—é|—É)')
        if '—Å' in name:
            name = name.replace('—Å', '(—Ü|—Å)')
        if '-' in name:
            name = name.replace('-', '(-)?')
        if ' ' in name:
            name = name.replace(' ', '[-, ]?')
        if '—à' in name:
            name = name.replace('—à', '(-)?(—â|—à)(-)?')
        if '–¥' in name:
            name = name.replace('–¥', '–¥(-)?')
        if '–Ω' in name:
            name = name.replace('–Ω', '–Ω(-)?')
        if '1' in name or '2' in name or '3' in name or '4' in name or '5' in name or '6' in name or '7' in name or '8' in name or '9' in name:
            numbers = '123456789'
            for n in name:
                if n in numbers:
                    name = name.replace(n, '[-, ]?{}[-, ]?'.format(n))
        df1 = df[(df[df.columns[0]].str.lower().str.contains(r'^(?!a-z){}( )|([-, ,\W,:space:]){}( )'.format(name.lower(), name.lower()), na=False, regex=True))]
        if df1.empty:
            df1 = df[(df[df.columns[1]].str.lower().str.contains(r'{}'.format(name.lower()), na=False, regex=True))]
        items = []
        texts = []
        l = df1[df1.columns[0]]
        for i in l:
            if not i in texts:
                texts.append(i)
                if '`' in i:
                    i = i.replace('`', ' ')
                items.append([KeyboardButton(text=i)])
        if not items:
            mrk = [[KeyboardButton(text='–ù–∞–∑–∞–¥')]]
            update.message.reply_text('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', reply_markup=ReplyKeyboardMarkup(mrk, resize_keyboard=True, one_time_keyboard=True))
            return GLOBAL_NAME
        else:
            items.append([KeyboardButton(text='–ù–∞–∑–∞–¥'), KeyboardButton(text='–ì–ª–∞–≤–Ω–∞—è')])
            update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.', reply_markup=ReplyKeyboardMarkup(items, resize_keyboard=True, one_time_keyboard=True))
            conn = sqlite3.connect('data.db')
            c = conn.cursor()
            c.execute("SELECT * FROM access_to_find WHERE id={} ".format(update.message.chat.id))
            n = c.fetchone()[2]
            c.execute("""UPDATE access_to_find SET chance = {} WHERE id={} """.format(int(n)-1, update.message.chat.id))
            conn.commit()
            for i in df1.values.tolist():
                if i[4] == '–¥–æ–≥–æ–≤.':
                    i[4] = 1
                elif i[4] == '–æ–∂–∏–¥–∞–µ–º—ã–π':
                    i[4] = 0
                if '`' in i[0]:
                    i[0] = i[0].replace('`', ' ')

                c.execute("INSERT INTO list_after_search VALUES ({}, '{}', '{}','{}','{}',{},'{}','{}','{}','{}','{}','{}') ".format(update.message.chat.id,*i))
            conn.commit()            
            conn.close()
            return SELECT_DRUGS
    

def select_drugs(update, context):
    bot = context.bot
    name = update.message.text
    if name == '–ì–ª–∞–≤–Ω–∞—è':
        conn = sqlite3.connect('data.db')
        c = conn.cursor()
        c.execute("SELECT * FROM list_after_search WHERE id={}".format(update.message.chat.id))
        for i in c.fetchall():
            c.execute("DELETE FROM list_after_search WHERE id={} ".format(update.message.chat.id))
        conn.commit()
        conn.close()
        update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=ReplyKeyboardMarkup(keyboard=[['–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤üîé'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è']], resize_keyboard=True))
        return ConversationHandler.END
    if name == '–ù–∞–∑–∞–¥':
        conn = sqlite3.connect('data.db')
        c = conn.cursor()
        c.execute("SELECT * FROM list_after_search WHERE id={}".format(update.message.chat.id))
        for i in c.fetchall():
            c.execute("DELETE FROM list_after_search WHERE id={} ".format(update.message.chat.id))
        conn.commit()

        c.execute("SELECT * FROM access_to_find WHERE id={} ".format(update.message.chat.id))
        f = update.message.date
        fetchone = c.fetchone()
        d = ''
        for x in str(f):
            if x == ' ':
                break
            else:
                d += x

        if not fetchone:

            c.execute("INSERT INTO access_to_find VALUES ({}, '{}', 5)".format(update.message.chat.id, d))
            conn.commit()
            update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –∞ –Ω–∞—à –±–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç –í–∞–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\n–ü—Ä–∏–º–µ—Ä: –∞–Ω–∞–ª—å–≥–∏–Ω\n(–ú–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)', reply_markup = ReplyKeyboardMarkup(keyboard=[['–ù–∞–∑–∞–¥']], resize_keyboard=True))
            conn.close()
            return GLOBAL_NAME
        else:
            date = fetchone[1]
            chance = fetchone[2]
            y, m, last_day = date.split('-')
            y1, m1, current_day = d.split('-')
            print(last_day, current_day)
            if last_day == current_day:

                if int(chance) <= 0:
                    

                    update.message.reply_text('–õ–∏–º–∏—Ç –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ–∏—Å–∫ 5 —Ä–∞–∑\n–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ —ç—Ç–æ', reply_markup=ReplyKeyboardMarkup(keyboard=[['–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤üîé'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è']], resize_keyboard=True))
                    return ConversationHandler.END
                else:
                    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –∞ –Ω–∞—à –±–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç –í–∞–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\n–ü—Ä–∏–º–µ—Ä: –∞–Ω–∞–ª—å–≥–∏–Ω\n(–ú–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)', reply_markup = ReplyKeyboardMarkup(keyboard=[['–ù–∞–∑–∞–¥']], resize_keyboard=True))
                    conn.close()
                    return GLOBAL_NAME
            else:
                c.execute("""UPDATE access_to_find SET last_date = '{}' WHERE id={} """.format(current_day, update.message.chat.id))
                c.execute("""UPDATE access_to_find SET chance = 5 WHERE id={} """.format(update.message.chat.id))
                conn.commit()
                update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –∞ –Ω–∞—à –±–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç –í–∞–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\n–ü—Ä–∏–º–µ—Ä: –∞–Ω–∞–ª—å–≥–∏–Ω\n(–ú–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)', reply_markup = ReplyKeyboardMarkup(keyboard=[['–ù–∞–∑–∞–¥']], resize_keyboard=True))
                conn.close()
                return GLOBAL_NAME

    else:
        bot.send_chat_action(chat_id=update.message.chat.id, action=ChatAction.TYPING)
        p = os.listdir()
        for i in p:
            if i[-3::] == 'xls' or i[-4::] == 'xlsx':
                path = i
                break
            
        conn = sqlite3.connect('data.db')
        c = conn.cursor()
        c.execute("SELECT zero, one, two, three, four, five, six, seven, eight, nine, ten FROM list_after_search WHERE zero='{}' ".format(name))
        w = c.fetchall()
        if not w:
            bot.send_message(update.message.chat.id, '–û—à–∏–±–∫–∞! –í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç, –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–π –≤ —Å–ø–∏—Å–∫–µ')
            return SELECT_DRUGS
        c.execute("SELECT * FROM sort WHERE id = {} ".format(update.message.chat.id))

        obj = c.fetchone()
        if obj[1] == '—Ü–µ–Ω–µ':
            
            if obj[2] == '–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ':
                w = sort_price_grow(w)
            elif obj[2] == '—É–±—ã–≤–∞–Ω–∏–µ':
                w = sort_price_wane(w)
        elif obj[1] == '–ø—Ä–æ—Ü–µ–Ω—Ç–∞–º':
            
            if obj[3] == '–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ':
                w = sort_percent_grow(w)
            elif obj[3] == '—É–±—ã–≤–∞–Ω–∏–µ':
                w = sort_percent_wane(w)
        
        c.execute("SELECT * FROM date ")
        f = c.fetchone()[0]
        
        d = ''
        for x in str(f):
            if x == ' ':
                break
            else:
                d += x
        all = w
        minn = 10000000000000000000000000.0
        maxn = 0
        results = ''
        n = 0
        for w in all:
            w4 = w[4]
            if int(w4) == 0:
                w4 = '–æ–∂–∏–¥–∞–µ–º—ã–π'
            elif int(w4) == 1:
                w4 = '–¥–æ–≥–æ–≤.'
            if maxn < w[4]:
                maxn = w[4]
            if minn > w[4]:
                minn = w[4]

            results += '\n–ù–∞–∑–≤–∞–Ω–∏—è: ' + w[0] + '\n–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: ' + w[9] + '({})'.format(w[10]) + '\n–ê–¥—Ä–µ—Å:' + find_address(w[8]) + '\n–¶–µ–Ω–∞ —Å—É–º: ' + str(w4) + '\n–¶–µ–Ω–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê: ' + str(w[5]) + '\n–¶–µ–Ω–∞ –≤ –ï–í–†–û: ' + str(w[6]) + '\n–¢–µ–ª–µ—Ñ–æ–Ω: '+ find_phone(w[8]) + '\n\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n'

            n += 1
            if n == 6:
                results = '–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∞–π—Å–∞: ' + d + '\n' + results
                bot.send_message(update.message.chat.id, results)
                results = ''
                n = 0
        min_and_max = '‚ÜóÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {} —Å—É–º.\n‚ÜòÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:  {} —Å—É–º.'.format(str(maxn), str(minn))
        if n != 0:
            results = '–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∞–π—Å–∞: ' + d + '\n' + results
            bot.send_message(update.message.chat.id, results)
        bot.send_message(update.message.chat.id, min_and_max)
        conn.close()
        return SELECT_DRUGS        
    

def find_address(title):
    try:
        conn = sqlite3.connect("data.db")
        c = conn.cursor()
        c.execute("SELECT * FROM address_and_phone WHERE name LIKE '%{}%' ".format(title.lower()))
        r = c.fetchone()[2]
        if r:
            return r
        else:
            return '–ù–µ —É–∫–∞–∑–∞–Ω' 
        conn.close()
    except:
        return '–ù–µ —É–∫–∞–∑–∞–Ω'

def find_phone(title):
    try:
        conn = sqlite3.connect("data.db")
        c = conn.cursor()
        c.execute("SELECT * FROM address_and_phone WHERE name LIKE '%{}%' ".format(title.lower()))
        r = c.fetchone()[1]
        if r:
            return r
        else:
            return '–ù–µ —É–∫–∞–∑–∞–Ω' 
        conn.close()
    except:
        return '–ù–µ —É–∫–∞–∑–∞–Ω'



def doc(update, context):

    bot = context.bot
    doc = bot.get_file(update.message.document.file_id)
    doc.download(update.message.document.file_name)
    
    p = os.listdir()
    for i in p:
        if i[-3::] == 'xls' or i[-4::] == 'xlsx':
            path = i
            break
    

def update_excel(update, context):
    if not update.message.text == None:
        if issuperadmin(update.message.chat.id):
            update.message.reply_text("–≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞", reply_markup=ReplyKeyboardMarkup(keyboard=[['–û–±–Ω–æ–≤–∏—Ç—å Excel'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ê–¥–º–∏–Ω—ã']], resize_keyboard=True))
        else:
            update.message.reply_text("–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞", reply_markup=ReplyKeyboardMarkup(keyboard=[['–û–±–Ω–æ–≤–∏—Ç—å Excel'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç']], resize_keyboard=True))
        return SUPERADMIN    
    else:
        bot = context.bot
        bot.send_chat_action(chat_id=update.message.chat.id, action=ChatAction.TYPING)
        p = os.listdir()
        for i in p:
            if i[-3::] == 'xls' or i[-4::] == 'xlsx':
                path = i
                break
        os.remove(path)
        conn = sqlite3.connect('data.db')
        c = conn.cursor()
        c.execute("""UPDATE date SET datetime = '{}' """.format(str(update.message.date)))
        conn.commit()
        bot = context.bot
        doc = bot.get_file(update.message.document.file_id)
        doc.download(update.message.document.file_name)

        p = os.listdir()
        for i in p:
            if i[-3::] == 'xls' or i[-4::] == 'xlsx':
                path = i
                break
        c.execute("SELECT * FROM address_and_phone ")
        for i in c.fetchall():
            c.execute("DELETE FROM address_and_phone ")
        conn.commit()
        df = pd.read_excel('{}'.format(path), sheet_name=1)
        for i in df.values.tolist():
        
            try:

                c.execute("INSERT INTO address_and_phone VALUES ('{}','{}','{}') ".format(i[1].lower(), i[2], i[3]))

            except:
                fnwow = 0
        conn.commit()
        conn.close()


        if issuperadmin(update.message.chat.id):
            update.message.reply_text("–≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞", reply_markup=ReplyKeyboardMarkup(keyboard=[['–û–±–Ω–æ–≤–∏—Ç—å Excel'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç'], ['–ê–¥–º–∏–Ω—ã']], resize_keyboard=True))
        else:
            update.message.reply_text("–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞", reply_markup=ReplyKeyboardMarkup(keyboard=[['–û–±–Ω–æ–≤–∏—Ç—å Excel'], ['–û –Ω–∞—Åüßæ'], ['–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ãü§ù'], ['–ù–∞—à —Å–∞–π—Ç']], resize_keyboard=True))
        return SUPERADMIN

def cancel(update, context):
    bot = context.bot
    c = update.callback_query 
    if update.callback_query.data == 'next':
        c.edit_message_text('–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç')
        return ConversationHandler.END

